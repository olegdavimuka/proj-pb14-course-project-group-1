[tool.poetry]
name = "proj-pb14-course-project-group-1"
version = "0.1.0"
description = ""
authors = ["AlinaProkhorenko <prokhorenko.alina@outlook.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
aiogram = "^3.1.1"
requests = "^2.31.0"
psycopg2-binary = "^2.9.9"
alembic = "^1.12.1"
sqlalchemy = "^2.0.23"
pydantic = "2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
ruff = "^0.1.6"
mypy = "^1.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
exclude = [
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    ".github",
    "docker",
    "docs",
    "Makefile",
    "pyproject.toml",
    "github-actions.yml",
]

line-length = 120
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pylint
    "PL",
]
ignore = [
    "E501",
    "W293",
    "W291",
    "W292",
    "E261",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "float", "str"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
exclude = [
    'migrations',
    ".ruff_cache",
]