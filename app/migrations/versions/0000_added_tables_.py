"""empty message

Revision ID: 0000_added_tables
Revises: 
Create Date: 2023-12-03 15:11:16.860498

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0000_added_tables"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("user_name", sa.String(length=60), nullable=True),
        sa.Column("user_age", sa.Integer(), nullable=True),
        sa.Column("user_location", sa.String(length=30), nullable=True),
        sa.Column("domain", sa.String(), nullable=True),
        sa.Column("position", sa.String(), nullable=True),
        sa.Column("photo", sa.LargeBinary(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("rating", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "feedback",
        sa.Column("feedback_id", sa.Integer(), nullable=False),
        sa.Column("reviewed_user_id", sa.Integer(), nullable=True),
        sa.Column("review", sa.String(), nullable=True),
        sa.Column("meet_rating", sa.Float(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["reviewed_user_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("feedback_id"),
    )
    op.create_table(
        "hobbies",
        sa.Column("hobby_id", sa.Integer(), nullable=False),
        sa.Column("hobby", sa.String(length=20), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("hobby_id"),
    )
    op.create_table(
        "meet_goals",
        sa.Column("meet_goal_id", sa.Integer(), nullable=False),
        sa.Column("goal", sa.String(length=20), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("meet_goal_id"),
    )
    op.create_table(
        "proposals",
        sa.Column("proposal_id", sa.Integer(), nullable=False),
        sa.Column("proposed_user_id", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("answer_time", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["proposed_user_id"],
            ["users.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("proposal_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("proposals")
    op.drop_table("meet_goals")
    op.drop_table("hobbies")
    op.drop_table("feedback")
    op.drop_table("users")
    # ### end Alembic commands ###
